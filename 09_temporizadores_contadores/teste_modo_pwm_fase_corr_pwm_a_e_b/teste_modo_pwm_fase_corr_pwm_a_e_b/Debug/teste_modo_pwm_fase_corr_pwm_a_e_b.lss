
teste_modo_pwm_fase_corr_pwm_a_e_b.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000158  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000104  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000158  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000188  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  000001c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000759  00000000  00000000  00000208  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000683  00000000  00000000  00000961  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002de  00000000  00000000  00000fe4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000048  00000000  00000000  000012c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ca  00000000  00000000  0000130c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000c7  00000000  00000000  000016d6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  0000179d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 80 00 	jmp	0x100	; 0x100 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#include "timers.h"


int main(void) //função principal
{
	DDRD = 0xFF;  //configura todo o PORTD como saída
  80:	8f ef       	ldi	r24, 0xFF	; 255
  82:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0x00; //coloca todo o PORTD em nível baixo
  84:	1b b8       	out	0x0b, r1	; 11
	
	Inicializa_TC0(TC0_modo_pwm_fc_TOP_255, TC0_OC0A_n_inv&TC0_OC0B_n_inv&TC0_CLK_1, TC0_INT_OFF);
  86:	40 e0       	ldi	r20, 0x00	; 0
  88:	69 ea       	ldi	r22, 0xA9	; 169
  8a:	81 e0       	ldi	r24, 0x01	; 1
  8c:	0e 94 4d 00 	call	0x9a	; 0x9a <Inicializa_TC0>
	OCR0A = 100; //tempo ativo do sinal pwm gerado pela saída comparadora A
  90:	84 e6       	ldi	r24, 0x64	; 100
  92:	87 bd       	out	0x27, r24	; 39
    OCR0B = 50;  //tempo ativo do sinal pwm gerado pela saída comparadora B
  94:	82 e3       	ldi	r24, 0x32	; 50
  96:	88 bd       	out	0x28, r24	; 40
  98:	ff cf       	rjmp	.-2      	; 0x98 <main+0x18>

0000009a <Inicializa_TC0>:
 * - _TC0_N:    seleciona o prescaler e configura as saídas de comparação
 * - _TC0_INT:  configura as interrupções
 */
void Inicializa_TC0(unsigned char _TC0_modo, unsigned char _TC0_OCAB_N, unsigned char _TC0_INT)
{
	TCCR0A = 0x00;
  9a:	14 bc       	out	0x24, r1	; 36
	TCCR0B = 0x00;
  9c:	15 bc       	out	0x25, r1	; 37
	TIMSK0 &= 0xF7;
  9e:	ee e6       	ldi	r30, 0x6E	; 110
  a0:	f0 e0       	ldi	r31, 0x00	; 0
  a2:	90 81       	ld	r25, Z
  a4:	97 7f       	andi	r25, 0xF7	; 247
  a6:	90 83       	st	Z, r25
		    TCCR0A |= ((_TC0_OCAB_N & 0xF0) | (_TC0_modo & 0x03));
			TCCR0B |= (((_TC0_modo << 1) & 0x08) | (_TC0_OCAB_N & 0x07));
		    break;
	}
	*/
	if(_TC0_modo == 0) TCCR0B |= (_TC0_OCAB_N & 0x07);
  a8:	81 11       	cpse	r24, r1
  aa:	05 c0       	rjmp	.+10     	; 0xb6 <Inicializa_TC0+0x1c>
  ac:	85 b5       	in	r24, 0x25	; 37
  ae:	67 70       	andi	r22, 0x07	; 7
  b0:	68 2b       	or	r22, r24
  b2:	65 bd       	out	0x25, r22	; 37
  b4:	1f c0       	rjmp	.+62     	; 0xf4 <Inicializa_TC0+0x5a>
	else if(_TC0_modo < 5)
  b6:	85 30       	cpi	r24, 0x05	; 5
  b8:	60 f4       	brcc	.+24     	; 0xd2 <Inicializa_TC0+0x38>
	{		
		TCCR0A |= ((_TC0_OCAB_N & 0xF0) | (_TC0_modo & 0x03));
  ba:	94 b5       	in	r25, 0x24	; 36
  bc:	26 2f       	mov	r18, r22
  be:	20 7f       	andi	r18, 0xF0	; 240
  c0:	83 70       	andi	r24, 0x03	; 3
  c2:	82 2b       	or	r24, r18
  c4:	89 2b       	or	r24, r25
  c6:	84 bd       	out	0x24, r24	; 36
		TCCR0B |= (_TC0_OCAB_N & 0x07);
  c8:	85 b5       	in	r24, 0x25	; 37
  ca:	67 70       	andi	r22, 0x07	; 7
  cc:	68 2b       	or	r22, r24
  ce:	65 bd       	out	0x25, r22	; 37
  d0:	11 c0       	rjmp	.+34     	; 0xf4 <Inicializa_TC0+0x5a>
	}
	else
	{
		TCCR0A |= ((_TC0_OCAB_N & 0xF0) | (_TC0_modo & 0x03));
  d2:	24 b5       	in	r18, 0x24	; 36
  d4:	36 2f       	mov	r19, r22
  d6:	30 7f       	andi	r19, 0xF0	; 240
  d8:	98 2f       	mov	r25, r24
  da:	93 70       	andi	r25, 0x03	; 3
  dc:	93 2b       	or	r25, r19
  de:	92 2b       	or	r25, r18
  e0:	94 bd       	out	0x24, r25	; 36
		TCCR0B |= (((_TC0_modo << 1) & 0x08) | (_TC0_OCAB_N & 0x07));
  e2:	25 b5       	in	r18, 0x25	; 37
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	88 0f       	add	r24, r24
  e8:	99 1f       	adc	r25, r25
  ea:	88 70       	andi	r24, 0x08	; 8
  ec:	67 70       	andi	r22, 0x07	; 7
  ee:	86 2b       	or	r24, r22
  f0:	82 2b       	or	r24, r18
  f2:	85 bd       	out	0x25, r24	; 37
		
	}
	TIMSK0 |= _TC0_INT;
  f4:	ee e6       	ldi	r30, 0x6E	; 110
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	80 81       	ld	r24, Z
  fa:	48 2b       	or	r20, r24
  fc:	40 83       	st	Z, r20
  fe:	08 95       	ret

00000100 <_exit>:
 100:	f8 94       	cli

00000102 <__stop_program>:
 102:	ff cf       	rjmp	.-2      	; 0x102 <__stop_program>
